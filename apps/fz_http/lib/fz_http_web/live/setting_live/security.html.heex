<%= render(FzHttpWeb.SharedView, "heading.html",
           page_subtitle: @page_subtitle,
           page_title: @page_title) %>

<section class="section is-main-section">
  <%= render FzHttpWeb.SharedView, "flash.html", assigns %>

  <h4 class="title is-4">Authentication</h4>

  <div class="block">
    <.form let={f} for={@site_changeset} phx-change="change" phx-submit="save_site">
      <div class="field">
        <%= label f, :vpn_session_duration, "Require Authentication For VPN Sessions", class: "label" %>
        <div class="field has-addons">
          <p class="control">
            <span class="select">
              <%= select f, :vpn_session_duration, @session_duration_options, class: "input" %>
            </span>
          </p>
          <p class="control">
            <%= submit "Save", disabled: !@form_changed, phx_disable_with: "Saving...", class: "button is-primary" %>
          </p>
        </div>
        <p class="help">
          Optionally require users to periodically authenticate to the Firezone
          web UI in order to keep their VPN sessions active.
        </p>
      </div>
    </.form>
  </div>

  <div class="block" title={@field_titles.local_auth_enabled}>

    <strong>Local Auth</strong>

    <div class="level">
      <div class="level-left">
        <p>Enable or disable authentication with email and password.</p>
      </div>
      <div class="level-right">
        <label class="switch is-medium">
          <input type="checkbox" phx-click="toggle"
              phx-value-config="local_auth_enabled"
              checked={Conf.get!(:local_auth_enabled)}
              value={if(!Conf.get!(:local_auth_enabled), do: "on")} />
          <span class="check"></span>
        </label>
      </div>
    </div>
  </div>

  <div class="block" title={@field_titles.allow_unprivileged_device_management}>

    <strong>Allow unprivileged device management</strong>

    <div class="level">
      <div class="level-left">
        <p>Enable or disable management of devices on unprivileged accounts.</p>
      </div>
      <div class="level-right">
        <label class="switch is-medium">
          <input type="checkbox" phx-click="toggle"
              phx-value-config="allow_unprivileged_device_management"
              checked={Conf.get!(:allow_unprivileged_device_management)}
              value={if(!Conf.get!(:allow_unprivileged_device_management), do: "on")} />
          <span class="check"></span>
        </label>
      </div>
    </div>
  </div>

  <div class="block" title={@field_titles.allow_unprivileged_device_configuration}>

    <strong>Allow unprivileged device configuration</strong>

    <div class="level">
      <div class="level-left">
        <p>
          Enable or disable configuration of device network settings for unprivileged users.
        </p>
      </div>
      <div class="level-right">
        <label class="switch is-medium">
          <input type="checkbox" phx-click="toggle"
              phx-value-config="allow_unprivileged_device_configuration"
              checked={Conf.get!(:allow_unprivileged_device_configuration)}
              value={if(!Conf.get!(:allow_unprivileged_device_configuration), do: "on")} />
          <span class="check"></span>
        </label>
      </div>
    </div>
  </div>

  <h4 class="title is-4">Single Sign-On</h4>

  <div class="block">
    <p>
      Single Sign-On can be configured in the main Firezone configuration
      file. Refer to the
      <a href="https://docs.firezone.dev/authenticate/">Firezone documentation</a>
      for more details.
    </p>
  </div>

  <div class="block" title={@field_titles.disable_vpn_on_oidc_error}>
    <strong>Auto disable VPN</strong>

    <div class="level">
      <div class="level-left">
        <p>Enable or disable auto disabling VPN connection on OIDC refresh error.</p>
      </div>
      <div class="level-right">
        <label class="switch is-medium">
          <input type="checkbox" phx-click="toggle"
              phx-value-config="disable_vpn_on_oidc_error"
              checked={Conf.get!(:disable_vpn_on_oidc_error)}
              value={if(!Conf.get!(:disable_vpn_on_oidc_error), do: "on")} />
          <span class="check"></span>
        </label>
      </div>
    </div>
  </div>

  <div class="block" title={@field_titles.auto_create_oidc_users}>
    <strong>Auto create OIDC users</strong>

    <div class="level">
      <div class="level-left">
        <p>Enable or disable auto creation of new users when logging in via OIDC for the first time.</p>
      </div>
      <div class="level-right">
        <label class="switch is-medium">
          <input type="checkbox" phx-click="toggle"
              phx-value-config="auto_create_oidc_users"
              checked={Conf.get!(:auto_create_oidc_users)}
              value={if(!Conf.get!(:auto_create_oidc_users), do: "on")} />
          <span class="check"></span>
        </label>
      </div>
    </div>
  </div>

  <div class="block" title={@field_titles.openid_connect_providers}>
    <.form let={f} for={@config_changeset} id="oidc-config-form" phx-submit="save_oidc_config">
      <div class="field">
        <%= label f, :openid_connect_providers, "OpenID Connect providers configuration",
            class: "label" %>
        <p>
          Enter a valid JSON string representing the OIDC configuration to apply.
          Read more about the format of this field in
          <a href="https://docs.firezone.dev/authenticate">
            our documentation
          </a>.
        </p>

        <div class="control">
          <%= textarea f,
              :openid_connect_providers,
              rows: 10,
              placeholder: @oidc_placeholder,
              class: "textarea #{input_error_class(@config_changeset, :openid_connect_providers)}" %>
        </div>

        <p class="help is-danger">
          <%= error_tag @config_changeset, :openid_connect_providers %>
        </p>
      </div>

      <%= Phoenix.View.render(FzHttpWeb.SharedView, "submit_button.html", button_text: "Save Providers") %>
    </.form>
  </div>
</section>

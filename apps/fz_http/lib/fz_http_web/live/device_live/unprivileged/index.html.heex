<%= if @live_action == :new do %>
  <%= live_modal(
      FzHttpWeb.DeviceLive.NewFormComponent,
      return_to: Routes.device_unprivileged_index_path(@socket, :index),
      title: "Add Device",
      current_user: @current_user,
      target_user_id: @current_user.id,
      id: "create-device-component",
      form: "create-device",
      button_text: "Generate Configuration") %>
<% end %>

<section class="section is-main-section">
  <%= render FzHttpWeb.SharedView, "flash.html", assigns %>
  <h4 class="title is-4"><%= @page_title %></h4>

  <div class="block">
    <%= @page_subtitle %>
  </div>

  <div class="block">
    You'll need a WireGuard client installed in order to connect to this Firezone
    instance. See
    <a target="_blank" href="https://docs.firezone.dev/user-guides/client-instructions/">
      the Firezone documentation
    </a>
    for a step-by-step guide.
  </div>

  <div class="block">
    <%= if length(@devices) > 0 do %>
      <table class="table is-bordered is-hoverable is-striped is-fullwidth">
        <thead>
          <tr>
            <th>Name</th>
            <th>Assigned Device IP</th>
            <th>Public key</th>
            <th>Created</th>
          </tr>
        </thead>
        <tbody>
        <%= for device <- @devices do %>
          <tr>
            <td>
              <%= live_patch(device.name, to: Routes.device_unprivileged_show_path(@socket, :show, device)) %>
            </td>
            <td class="code">
              <span><%= device.ipv4 %></span>
              <span><%= device.ipv6 %></span>
            </td>
            <td class="code"><%= device.public_key %></td>
            <td id={"device-#{device.id}-inserted-at"} data-timestamp={device.inserted_at} phx-hook="FormatTimestamp">â€¦</td>
          </tr>
        <% end %>
        </tbody>
      </table>
    <% else %>
      <p>
        <strong>No devices to show.</strong>
      </p>
    <% end %>
  </div>

  <%= if FzHttpWeb.DeviceView.can_manage_devices?(@current_user) do %>
    <div class="block">
      <%= live_patch(to: Routes.device_unprivileged_index_path(@socket, :new), class: "button") do %>
        Add Device
      <% end %>
    </div>
  <% end %>

  <h4 class="title is-4">VPN Session</h4>

  <div class="level">
    <div class="level-left">
      <div class="block">
        <%= if vpn_sessions_expire?() do %>
          <%= if vpn_expired?(@current_user) do %>
            <p>
              Your VPN session expired at:
            </p>
          <% else %>
            <p>
              Your VPN session expires at:
            </p>
          <% end %>
          <p>
            <strong>
              <span id="vpn-expires" phx-hook="FormatTimestamp" data-timestamp={vpn_expires_at(@current_user)}>...</span>
            </strong>
          </p>
          <%= link("Reauthenticate", to: Routes.auth_path(@socket, :delete), method: :delete) %>
          to renew your VPN session.
        <% else %>
          Your VPN session is active indefinitely.
        <% end %>
      </div>
    </div>

    <div class="level-right">
      <div class="block">
        <p>
          Signed in as <%= @current_user.email %>.
        </p>
        <p>
          <%= live_patch(to: Routes.setting_unprivileged_account_path(@socket, :show)) do %>
            My Account
          <% end %>
          /
          <%= link(to: Routes.auth_path(@socket, :delete), method: :delete) do %>
            Sign out
          <% end %>
        </p>
        <p>
          For any issues, <a href={"mailto:#{admin_email()}"}>contact your Firezone administrator</a>.
        </p>
      </div>
    </div>
  </div>
</section>
